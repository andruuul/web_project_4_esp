!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.placeName,r=e.photo,o=e.cardTemplateSelector,i=e.callbackImage;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._placeName=n,this._photoSource=r,this._callbackImage=i,this._cardTemplateSelector=o}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".elements-grid__card").cloneNode(!0)}},{key:"_likeCard",value:function(){this._likeBtn.classList.toggle("elements-grid__like-button_active")}},{key:"_removeCard",value:function(){this._element.remove()}},{key:"_setEventListeners",value:function(){var e=this;this._likeBtn=this._element.querySelector(".elements-grid__like-button"),this._deleteBtn=this._element.querySelector(".elements-grid__delete-button"),this._photo=this._element.querySelector(".elements-grid__photo"),this._likeBtn.addEventListener("click",(function(){e._likeCard()})),this._deleteBtn.addEventListener("click",(function(){e._removeCard()})),this._photo.addEventListener("click",(function(t){e._callbackImage(t)}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".elements-grid__photo"),this._cardImage.src=this._photoSource,this._cardImage.alt=this._placeName,this._element.querySelector(".elements-grid__place-name").textContent=this._placeName,this._setEventListeners(),this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._settings=n,this._submitButton=this._form.querySelector(n.saveButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(n.inputSelector))}var t,r;return t=e,(r=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideError(t)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._settings.inactiveButtonSelector),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._settings.inactiveButtonSelector),this._submitButton.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_showError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-input-error")),e.classList.add(this._settings.errorSelector),this._errorElement.classList.add(this._settings.errorActiveSelector),this._errorElement.textContent=e.validationMessage}},{key:"_hideError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-input-error")),e.classList.remove(this._settings.errorSelector),this._errorElement.classList.remove(this._settings.errorActiveSelector),this._errorElement.textContent=""}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),a=document.querySelector("#inputUsername"),c=document.querySelector("#inputSubtitle"),u=document.querySelector(".profile-grid__add-button"),l=document.querySelector("#editButton");function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var p=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupSelector=t,this._popup=document.querySelector(this._popupSelector),this._overlay=document.querySelector(".overlay")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.remove("popup_hidden"),this._overlay.style.display="block",document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.add("popup_hidden"),this._overlay.style.display="none",document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._overlay.addEventListener("click",(function(){e.close()})),this._popup.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function m(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._callback=t,n._inputs=n._popup.querySelectorAll(".popup__input"),n._formSelector=".popup__form",n._form=n._popup.querySelector(n._formSelector),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){h(v(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;h(v(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._callback(e._getInputValues()),e.close()}))}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(p);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function j(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImage=t._popup.querySelector("#popupImageImage"),t._popupTextSelector="#popupImageText",t._imageCaption=t._popup.querySelector(t._popupTextSelector),t._sourceTextSelector=".elements-grid__place-name",t}return t=a,(n=[{key:"open",value:function(e){w(O(a.prototype),"open",this).call(this);var t=e.target,n=t.closest("div").querySelector(this._sourceTextSelector);this._popupImage.src=t.src,this._popupImage.alt=n.textContent,this._popup.querySelector(this._popupTextSelector).textContent=n.textContent}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(p);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=new(function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._job=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._job.textContent=t}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())(document.getElementById("defaultUsername"),document.getElementById("defaultSubtitle"));function C(e){return new t({placeName:e.name,photo:e.link,cardTemplateSelector:"#cardTemplate",callbackImage:function(e){V.open(e)}}).generateCard()}var q=new i({items:[{name:"Valle de Yosemite",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lago Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Montañas Calvas",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Parque Nacional de la Vanoise",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){var t=C(e);q.addItem(t)}},".elements-grid");q.renderItems();var B,x={};B={inactiveButtonSelector:"popup__save-button_inactive",saveButtonSelector:".popup__save-button",inputSelector:".popup__input",errorSelector:"popup__input_type_error",errorActiveSelector:"popup__input-error_active"},Array.from(document.querySelectorAll(".popup__form")).forEach((function(e){var t=new r(e,B),n=e.getAttribute("name");x[n]=t,t.enableValidation()}));var T=new b("#popupContainer",(function(e){var t=e.name,n=e.job;I.setUserInfo(t,n)}));l.addEventListener("click",(function(){var e=I.getUserInfo(),t=e.name,n=e.job;a.value=t,c.value=n,T.open(),x["profile-form"].resetValidation()})),T.setEventListeners();var R=new b("#popupContainerNewPlace",(function(e){var t=C(e);q.addItem(t)}));u.addEventListener("click",(function(){R.open(),x["place-form"].resetValidation()})),R.setEventListeners();var V=new L("#popupImageContainer");V.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,