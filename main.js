!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.placeName,r=e.photo,o=e.likes,i=e.cardId,c=e.ownerId,a=e.cardTemplateSelector,u=e.callbackImage,l=e.confirmCallback;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._placeName=n,this._photoSource=r,this._likes=o,this._callbackImage=u,this._cardTemplateSelector=a,this._cardId=i,this._ownerId=c,this._confirmationPopup=document.querySelector("#confirmationPopup"),this._confirmCallback=l}var n,r;return n=t,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".elements-grid__card").cloneNode(!0)}},{key:"_likeCard",value:function(){this._likeBtn.classList.toggle("elements-grid__like-button_active"),console.log(this._likes)}},{key:"removeCard",value:function(){this._element.remove()}},{key:"_setEventListeners",value:function(){var e=this;this._likeBtn=this._element.querySelector(".elements-grid__like-button"),this._deleteBtn=this._element.querySelector(".elements-grid__delete-button"),this._photo=this._element.querySelector(".elements-grid__photo"),this._likeBtn.addEventListener("click",(function(){e._likeCard()})),this._deleteBtn.addEventListener("click",(function(){e._confirmCallback()})),this._photo.addEventListener("click",(function(t){e._callbackImage(t)}))}},{key:"generateCard",value:function(e){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".elements-grid__photo"),this._cardLikes=this._element.querySelector(".elements-grid__likes"),this._ownerId!==e&&this._element.querySelector(".elements-grid__delete-button").classList.add("elements-grid__delete-button_hidden"),this._cardImage.src=this._photoSource,this._cardImage.alt=this._placeName,this._element.querySelector(".elements-grid__place-name").textContent=this._placeName,this._cardLikes.textContent=this._likes.length,this._setEventListeners(),this._element}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._settings=n,this._submitButton=this._form.querySelector(n.saveButtonSelector),this._inputList=Array.from(this._form.querySelectorAll(n.inputSelector))}var t,r;return t=e,(r=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideError(t)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._settings.inactiveButtonSelector),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._settings.inactiveButtonSelector),this._submitButton.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_showError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-input-error")),e.classList.add(this._settings.errorSelector),this._errorElement.classList.add(this._settings.errorActiveSelector),this._errorElement.textContent=e.validationMessage}},{key:"_hideError",value:function(e){this._errorElement=this._form.querySelector(".".concat(e.id,"-input-error")),e.classList.remove(this._settings.errorSelector),this._errorElement.classList.remove(this._settings.errorActiveSelector),this._errorElement.textContent=""}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),c=document.querySelector("#inputUsername"),a=document.querySelector("#inputSubtitle"),u=document.querySelector(".profile-grid__add-button"),l=document.querySelector("#editButton"),s=document.getElementById("defaultUsername"),f=document.getElementById("defaultSubtitle");function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".profile-grid__avatar"),document.querySelector("#confirmButton");var h=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popupSelector=t,this._popup=document.querySelector(this._popupSelector),this._overlay=document.querySelector(".overlay")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.remove("popup_hidden"),this._overlay.style.display="block",document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){console.log(this._popup),this._popup.classList.add("popup_hidden"),this._overlay.style.display="none",document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._overlay.addEventListener("click",(function(){e.close()})),this._popup.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()}))}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=b(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(this,arguments)}function b(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function v(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._callback=t,n._confirmBtn=document.querySelector("#confirmButton"),n}return t=c,(n=[{key:"updateId",value:function(e){this._id=e}},{key:"setEventListeners",value:function(){var e=this;_(g(c.prototype),"setEventListeners",this).call(this),this._confirmBtn.addEventListener("click",(function(){e._callback(e._id)}))}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(h);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function P(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function c(e){var t,n=e.popupSelector,r=e.handleSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,n))._handleSubmit=r,t._inputs=t._popup.querySelectorAll(".popup__input"),t._formSelector=".popup__form",t._form=t._popup.querySelector(t._formSelector),t}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){E(C(c.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;E(C(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues()),e.close()}))}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(h);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=B(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function x(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupImage=t._popup.querySelector("#popupImageImage"),t._popupTextSelector="#popupImageText",t._imageCaption=t._popup.querySelector(t._popupTextSelector),t._sourceTextSelector=".elements-grid__place-name",t}return t=c,(n=[{key:"open",value:function(e){T(U(c.prototype),"open",this).call(this);var t=e.target,n=t.closest("div").querySelector(this._sourceTextSelector);this._popupImage.src=t.src,this._popupImage.alt=n.textContent,this._popup.querySelector(this._popupTextSelector).textContent=n.textContent}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(h);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._job=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent,id:this._id}}},{key:"setUserInfo",value:function(e,t,n){this._name.textContent=e,this._job.textContent=t,this._id=n}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r,this._authorization=r.authorization}var t,n;return t=e,(n=[{key:"_request",value:function(e,t){return fetch(e,t).then(this._checkResponse)}},{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){return this._request("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._authorization}})}},{key:"getProfileInfo",value:function(){return this._request("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._authorization}})}},{key:"editProfile",value:function(e,t){return this._request("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})})}},{key:"addNewCard",value:function(e){return this._request("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})})}},{key:"deleteCard",value:function(e){return this._request("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}})}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_02",headers:{authorization:"c0a099b3-69e1-4897-8731-fc3bd1c460e5","Content-Type":"application/json"}}),J=new A(s,f),H="";V.getProfileInfo().then((function(e){var t=e.name,n=e.about,r=e._id;H=r,J.setUserInfo(t,n,H)})).then((function(){return V.getInitialCards()})).then((function(e){var t=new i({items:e,renderer:function(e){var n=Q(e);t.addItem(n)}},".elements-grid");t.renderItems()})).catch((function(e){console.log("Error. La solicitud ha fallado: ",e)})).finally((function(){}));var M=new I({popupSelector:"#popupContainer",handleSubmit:function(e){var t=e.name,n=e.job;J.setUserInfo(t,n),V.editProfile(t,n).catch((function(e){console.log("Error. La solicitud ha fallado: ",e)})).finally((function(){}))}}),F=new I({popupSelector:"#popupContainerNewPlace",handleSubmit:function(e){V.addNewCard(e).then((function(e){var t=Q(e);document.querySelector(".elements-grid").prepend(t)})).catch((function(e){console.log("Error. La solicitud ha fallado: ",e)})).finally((function(){}))}}),G=null,K=new S("#confirmationPopup",(function(e){V.deleteCard(e).then((function(){K.close(),G.removeCard()})).catch((function(e){console.log("Error. La solicitud ha fallado: ",e)}))}));function Q(e){var n=new t({placeName:e.name,photo:e.link,likes:e.likes,cardId:e._id,ownerId:e.owner._id,cardTemplateSelector:"#cardTemplate",callbackImage:function(e){Y.open(e)},confirmCallback:function(){K.open(),G=n,K.updateId(e._id)}});return n.generateCard(J.getUserInfo().id)}K.setEventListeners();var W,X={};W={inactiveButtonSelector:"popup__save-button_inactive",saveButtonSelector:".popup__save-button",inputSelector:".popup__input",errorSelector:"popup__input_type_error",errorActiveSelector:"popup__input-error_active"},Array.from(document.querySelectorAll(".popup__form")).forEach((function(e){var t=new r(e,W),n=e.getAttribute("name");X[n]=t,t.enableValidation()})),l.addEventListener("click",(function(){var e=J.getUserInfo(),t=e.name,n=e.job;c.value=t,a.value=n,M.open(),X["profile-form"].resetValidation()})),M.setEventListeners(),u.addEventListener("click",(function(){F.open(),X["place-form"].resetValidation()})),F.setEventListeners();var Y=new z("#popupImageContainer");Y.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,